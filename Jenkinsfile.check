pipeline{
    agent any
    options{
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }
    stages{
        stage('check'){

            steps{
                checkout scm

                script{
                    if(isUnix()) {
                        sh 'sh gradlew clean check'
                    }
                    else {
                        bat 'c:\\bin\\jdk-custom-env jdk && gradlew.bat clean check'  // jdk 14 on host
                    }

                    //def spotbugs = scanForIssues tool: spotBugs(pattern: 'build/reports/spotbugs/*.xml', useRankAsPriority: true)
                    //publishIssues([spotbugs])

                }

                // https://wiki.jenkins.io/display/JENKINS/Static+Analysis+in+Pipelines
                //def spotbugs = scanForIssues tool: spotBugs(pattern: 'build/reports/spotbugs/*.xml', useRankAsPriority: true)
                //publishIssues([spotbugs])

                recordIssues aggregatingResults: false, tools: [
                    spotBugs(pattern: 'build/reports/spotbugs/*.xml', useRankAsPriority: true),
                    pmdParser(pattern: 'build/reports/pmd/*.xml'),
                    checkStyle(pattern: 'build/reports/checkstyle/*.xml'),
                    taskScanner(includePattern: '**/*.java', normalTags: 'TODO')
                    ]

            }

        }


    }
}
