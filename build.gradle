/*

    To make release and increase version:
        gradle -Preckon.stage=final -Preckon.scope=patch reckonTagPush
        gradle -Preckon.stage=final -Preckon.scope=minor reckonTagPush
        gradle -Preckon.stage=final -Preckon.scope=major reckonTagPush

*/

plugins {
    id 'application'
    id 'eclipse'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'org.beryx.jlink' version '2.17.7'

    //id 'com.github.spotbugs' version '4.0.5'
    //id 'ru.vyarus.quality' version '4.1.0'

//    id 'net.saliman.properties' version '1.5.1'
    id 'com.github.ben-manes.versions' version '0.28.0'
    id 'org.ajoberstar.reckon' version '0.12.0'
}

repositories {
    jcenter()
}

dependencies {
    compile 'com.h2database:h2:1.4.200'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.1' // forcemerge
    //compile 'org.apache.logging.log4j:log4j-core:2.12.1'

    // As of version 2.10.0 the Log4j API is a Java module
    // errors in jlink
    //compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.9.1'


    // TODO deprecated methods in HtmlImporter, refactor
//    compile(group: 'xerces', name: 'xercesImpl', version: '2.12.0')
//    {
//        exclude module: 'xml-apis'
//    }
//    compile fileTree(dir: 'lib', include: ['*.jar'])

    compile 'org.kordamp.bootstrapfx:bootstrapfx-core:0.2.4'


    compile group: 'org.jsoup', name: 'jsoup', version: '1.13.1'

//    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.12.Final'
//    compile group: 'org.flywaydb', name: 'flyway-core', version: '6.3.1'

    //testImplementation('org.junit.jupiter:junit-jupiter:5.6.0') // as junit doc says

    // as gradle doc says
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.1'

//    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.10.1'
//    spotbugsPlugins 'com.mebigfatguy.fb-contrib:fb-contrib:7.4.7'
}


// tests has cyrillic and saved as unicode
// see also Eclipse: Set UTF8 encoding if specified in build.gradle https://github.com/gradle/gradle/issues/898
// https://gist.github.com/rponte/d660919434d094bbd35a1aabf7ef1bf0
//compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'


if(!project.hasProperty('reckon.scope')){
    project.ext.'reckon.scope' = 'patch'    // override default 'minor'
}

reckon {
    scopeFromProp()
    stageFromProp('dev', 'final')
}


javafx {
    version = '14'
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.web' ]
}

mainClassName = "$moduleName/org.sergeys.cookbook.ui.CookBook"

// from openjfx samples
/*
eclipse {
    classpath {
        file {
            whenMerged {
                entries.findAll { it.properties.kind.equals('lib') }.each {
                    it.entryAttributes['module'] = 'true'
                }
            }
        }
    }
}
*/

// https://discuss.gradle.org/t/how-to-set-the-module-path-project-jigsaw-for-eclipse-projects-via-gradle/26801/3
eclipse {
    classpath {
        file {
            whenMerged {
                entries.findAll { isModule(it) }.each {
                    it.entryAttributes['module'] = 'true'
                }
                entries.findAll { isSource(it) && isTestScope(it) }.each {
                    it.entryAttributes['test'] = 'true'
                }
                entries.findAll { isLibrary(it) && isTestScope(it) }.each {
                    it.entryAttributes['test'] = 'true'
                }
            }
        }
//        defaultOutputDir = file('build')
//        downloadSources = true
//        downloadJavadoc = true
    }
}

boolean isLibrary(entry) { return entry.properties.kind.equals('lib') }
boolean isTestScope(entry) { return entry.entryAttributes.get('gradle_used_by_scope').equals('test'); }
boolean isModule(entry) { isLibrary(entry) && !isTestScope(entry); }
boolean isSource(entry) { return entry.properties.kind.equals('src'); }

// https://github.com/beryx/badass-jlink-plugin/issues/72
// Execute: ./gradlew suggestMergedModuleInfo
// Remove the lines contaning provides clauses and put the resulting mergedModule configuration in your jlink block.

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages'] // --bind-services ?
    launcher {
        name = 'cookbook'
    }
    forceMerge('log4j-api') // https://github.com/beryx/badass-jlink-plugin/issues/14

    mergedModule {
        additive = true
        //requires 'java.desktop'
        //requires transitive 'java.sql'
        //uses 'java.sql.Driver'
        //provides 'java.sql.Driver' with 'org.hsqldb.jdbc.JDBCDriver'
    }
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

test {
    useJUnitPlatform()
//    testLogging {
//        events "passed", "skipped", "failed"
//    }
    // do not perform unit tests
    exclude 'org/sergeys/cookbook/**'
}

/*
spotbugs {
    ignoreFailures = true

     //'org.sergeys.cookbook.*',
    onlyAnalyze = [ 'org.sergeys.cookbook.logic.*', 'org.sergeys.cookbook.ui.*']
//    excludeFilter = file("$projectDir/config/findbugs/excludeFilter.xml")
}
*/

/*
spotbugsMain {
    reports {
        html {
            enabled = true
//            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
 //           stylesheet = 'fancy-hist.xsl'
        }
    }
}
*/

/*
//quality.sourceSets = [sourceSets.main]
quality {
    //sourceSets = [sourceSets.main, sourceSets.test]
//    sourceSets = [sourceSets.main]
//    findbugs = false
    strict = false
    checkstyle = false
    spotbugsMaxHeapSize = '1g'
}
*/
